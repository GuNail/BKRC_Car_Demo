#ifndef __DATA_BASE_H
#define __DATA_BASE_H

#include "stm32f4xx.h"

static u8 H_S[4]={0x80,0x7F,0x05,~(0x05)};	 //照片上翻
static u8 H_X[4]={0x80,0x7F,0x1B,~(0x1B)};	 //照片下翻

static u8 H_1[4]={0x00,0xFF,0x0C,~(0x0C)};	 //光源档位加1
static u8 H_2[4]={0x00,0xFF,0x18,~(0x18)};	 //光源档位加2
static u8 H_3[4]={0x00,0xFF,0x5E,~(0x5E)};	 //光源档位加3

static u8 H_SD[4]={0x00,0xFF,0x45,~(0x45)};	  //隧道风扇系统打开

//1    {0xde,0xc1,0x31,0x34,0x37,0x38}   {0xac,0x35,0x30,0x31,0x32,0x33};
//2    {0xc2,0x90,0x31,0x34,0x38,0x39}
static u8 HW_K[6]={0x03,0x05,0x14,0x45,0xDE,0x92};  //报警器打开(设备2默认开启码为0xc2,0x90,0x31,0x34,0x38,0x39)

static u8 HW_G[6]={0x67,0x34,0x78,0xA2,0xFD,0x27};	//报警器关闭

static u8 XG_HW[6]={0xF7,0xA1,0x7A,0x56,0x35,0x35};     //修改烽火台开起码

static u8 CP_G1[6]={0xFF,0x12,0x01,0x00,0x00,0x00};
static u8 CP_G2[6]={0xFF,0x13,0x01,0x00,0x00,0x00};
static u8 SMG_SHOW[8]={0x55,0x04,0x02,0xA1,0xB2,0xC3,0x18,0xBB};  //数码管显示

static u8 DZ_K[8]={0x55,0x03,0x01,0x01,0x00,0x00,0x02,0xBB};  //道闸开启
static u8 DZ_G[8]={0x55,0x03,0x01,0x02,0x00,0x00,0x03,0xBB};  //道闸关闭	
static u8 DZ_CX[8]={0x55,0x03,0x20,0x01,0x00,0x00,0x21,0xBB};  //道闸状态回传
static u8 DZ_KQM[6]={"N996E4"};  //N996E4


static u8 CP_SHOW1[6]={0xFF,0x20,0x4E,0x34,0x30,0x30};
static u8 CP_SHOW2[6]={0xFF,0x10,0x59,0x36,0x41,0x33};

static u8 HLA_DisTab[6] = {0x00,0x00,0x00,0x00,0x00,0x00};//备用
static u8 HLB_DisTab[6] = {0x00,0x00,0x00,0x00,0x00,0x00};//备用

#define Principal_Length 50
#define Follower_Length  50

extern uint8_t Principal_Tab[Principal_Length]; 
extern uint8_t Follower_Tab[Follower_Length];

static u8 LD_DW[1]={0x02};                                //存储智能路灯初始档位
static u8 CC_RK[1]={0x3A};                                //存储从车入库位置0X3A,0X3B,0X3C,0X3D,分别为不同的从车入库位置，路线为从车编写主车负责调用
/*---------------------------------------------------------------------------
//--------------------LED显示
---------------------------------------------------------------------------*/
//  [0]模式: 0x01数据写入第一排数码管                       //LED显示图形个数如A1B3C3
//  [0]模式: 0x02数据写入第二排数码管                       //LED显示图形个数如A1B3C3
static u8 LED_Figure[4]={0x02,0xa1,0xb3,0xc3};              //LED显示图形个数如A1B3C3

//  [0]模式: 0x03(LED标志物进入计时模式
//  [1]:0x00关闭0x01打开0x02清零[2-3]:0x00
static u8 SMG_JSK[8]={0x55,0x04,0x03,0x01,0x00,0x00,0x04,0xBB};  //数码管开始计时
static u8 SMG_JSG[8]={0x55,0x04,0x03,0x00,0x00,0x00,0x03,0xBB};  //数码管关闭计时
static u8 SMG_JSQ[8]={0x55,0x04,0x03,0x02,0x00,0x00,0x05,0xBB};  //数码管清零计时

//  [0]模式: 0x04数码管第二排显示距离 
//  [1]:0x00  [2]:0x02  [3]:0x34   显示【JL234】
static u8 SMG_JL[4]={0x04,0x00,0x03,0x75};                        //数码管显示距离  显示【JL234】
static u8 SMG_HEX[3]={0xA2,0xB2,0xC3}; 


/*---------------------------------------------------------------------------
//--------------------TFT显示
---------------------------------------------------------------------------*/

static u8 TFT_UP[8] = {0x55,0x0B,0x10,0x01,0x00,0x00,0x11,0xBB};	//TFT上翻 A
static u8 TFT_down[8] = {0x55,0x0B,0x10,0x02,0x00,0x00,0x12,0xBB};	//TFT下翻A
static u8 TFT_JSG[8]={0x55,0x0B,0x30,0x00,0x00,0x00,0x30,0xBB};  //TFT关闭定时A
static u8 TFT_JSK[8]={0x55,0x0B,0x30,0x01,0x00,0x00,0x31,0xBB};  //TFT打开定时A
static u8 TFT_JSClear[8]={0x55,0x0B,0x30,0x02,0x00,0x00,0x32,0xBB};  //TFT计时清零A

//extern u8 TFTB_GD[8]={0x55,0x08,0x10,0x00,0x01,0x00,0x11,0xBB};  

static u8 TFTB_UP[8] = {0x55,0x08,0x10,0x01,0x00,0x00,0x11,0xBB};	//TFT上翻B
static u8 TFTB_down[8] = {0x55,0x08,0x10,0x02,0x00,0x00,0x12,0xBB};	//TFT下翻B
static u8 TFTB_JSG[8]={0x55,0x08,0x30,0x00,0x00,0x00,0x30,0xBB};  //TFT关闭定时B
static u8 TFTB_JSK[8]={0x55,0x08,0x30,0x01,0x00,0x00,0x31,0xBB};  //TFT打开定时B
static u8 TFTB_JSClear[8]={0x55,0x08,0x30,0x02,0x00,0x00,0x32,0xBB};  //TFT计时清零B

static u8 TFT_JL[3]={0x36,0x37,0x30};                          //TFT显示距离670
					//{0x39,0x31,0x30} 910
static u8 TFTB_JL[3]={0x33,0x16,0xa3};                          //TFT显示距离B       (363)mm末尾和
static u8 TFT_CP[6]={0x41,0x31,0x32,0x33,0x42,0x34};                          //TFT显示车牌    采用ASCII码值
static u8 TFTB_CP[6]={0x47,0x35,0x37,0x30,0x45,0x39};                          //TFT显示车牌B 第一次 采用ASCII码值

static u8 CP[6]={0x41,0x37,0x39,0x39,0x5A,0x31};				//显示车牌数据
/*---------------------------------------------------------------------------
//--------------------立体显示
---------------------------------------------------------------------------*/
//   [0] - [5]  车牌数据 [6] - [7] 横坐标与纵坐标
static u8 LTXS_CP[8] = {0x44,0x35,0x38,0x32,0x47,0x38,0x42,0x32};           //立体显示车牌 采用ASCII码值
/*  [0]模式:       [1]       [2]      [3]      [4]
    0x11距离    距离十位   距离个位   0x00    0x00*/
static u8 LTXS_JL[5] = {0x11,0x00,0x00,0x00,0x00};                          //立体显示距离 采用ASCII码值

// [0]：0x12图形 [1]:0x01矩形0x02圆形0x03三角形0x04菱形
//      0x05梯形0x06饼图0x07靶图0x08条形图   [2-4]0x00   
static u8 LTXS_XZ[5] = {0x12,0x01,0x00,0x00,0x00};                          //立体显示形状

//  [0]： 0x13颜色  [1]：0x01红色0x02绿色0x03蓝色0x04黄色
//        0x05紫色0x06青色0x07黑色0x08白色   [2-4]0x00   
static u8 LTXS_YS[5] = {0x13,0x01,0x00,0x00,0x00};                           //立体显示颜色

//  [0]： 0x14路况  [1]：0x01隧道有事故，请绕道 
//  0x02前方施工，请绕道   [2-4]0x00   
static u8 LTXS_LK[5] = {0x14,0x01,0x00,0x00,0x00};                            //立体显示路况
//   [0]：0x15默认模式[1]：0x01  [2-4]0x00   


/*---------------------------------------------------------------------------
//-------------------超声波测距
---------------------------------------------------------------------------*/
static u8 JL_Code[5]={0x11,0x33,0x00,0x00,0x00};      //超声波测距数据存储
static u8 LD_Code[3]={0x00,0x00,0x00}; 
static u8 TFT_Code[1]={0x00};                         //智能路灯数据发送数据给TFT
static int F1,F2; 

static int light_start; 
static int falot = 1;



#endif
